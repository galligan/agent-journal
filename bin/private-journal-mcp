#!/usr/bin/env node

const { spawn } = require('child_process');
const path = require('path');

// Try to run with Bun first if available
const args = process.argv.slice(2);
const bunProcess = spawn('bun', [__filename, ...args], {
  stdio: 'inherit',
  shell: false
});

bunProcess.on('error', (err) => {
  // Bun not available, fall back to Node
  if (err.code === 'ENOENT') {
    // Try to use compiled dist version if available
    try {
      require(path.join(__dirname, '..', 'dist', 'index.js'));
    } catch (distErr) {
      // Fall back to TypeScript source (requires ts-node or similar)
      try {
        require(path.join(__dirname, '..', 'src', 'index.ts'));
      } catch (srcErr) {
        console.error('Error: Unable to run private-journal-mcp');
        console.error('Please ensure Bun is installed or the project is built');
        process.exit(1);
      }
    }
  } else {
    console.error('Error spawning Bun:', err);
    process.exit(1);
  }
});

bunProcess.on('exit', (code) => {
  process.exit(code || 0);
});